<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rrbot_gazebo)/worlds/table_lidar_coke.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"  command="$(find xacro)/xacro.py '$(find phantomx_description)/urdf/phantomx.xacro'" />

  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-urdf -model phantomx -param robot_description"/>

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find phantomx_description)/config/phantomx.yaml" command="load"/>

  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
	output="screen" ns="/" args="joint_state_controller
                      trajectory_controller
                        gripper_controller "/>
                      

 <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
	respawn="false" output="screen">
  </node>


<!-- define a frame for kinect depth topics-->
<node pkg="tf" type="static_transform_publisher" name="kinect_image_camera_tf" args="0 0 0 -1.58 0 -1.58 /kinect_link /kinect_image_frame 100"/>


</launch>

